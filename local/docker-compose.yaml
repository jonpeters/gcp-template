services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app-network
  react-ui:
    image: react-ui
    build:
      context: ../src/ui
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - 3000:3000
    container_name: react-ui
    volumes:
      - ../src/ui/src:/app/src
    networks:
      - app-network
  node-api:
    image: node-api
    build:
      context: ../src/api
      dockerfile: Dockerfile
      target: base
    ports:
      - 8082:8080
    container_name: node-api
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=example
    command: npm run dev
    volumes:
      - ../src/api:/app/
      - ../src/api/nodemon.json:/app/nodemon.json
    networks:
      - app-network
  nginx-server:
    image: nginx-load-balancer
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:80
    container_name: nginx-load-balancer
    restart: unless-stopped
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  db:
    external: false
